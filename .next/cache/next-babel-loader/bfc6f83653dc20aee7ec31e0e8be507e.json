{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { queryDB } from \"../../Functions\";\nimport ArticlePreview from '../../components/ArticlePreview';\n\nfunction Author({\n  author,\n  articles\n}) {\n  return __jsx(\"ul\", null, articles.slice(0, 10).map((article, i) => __jsx(\"li\", {\n    key: i\n  }, \" \", __jsx(ArticlePreview, {\n    article: article\n  }), \" \")));\n}\n\nexport async function getStaticPaths() {\n  let ids = await queryDB('SELECT id FROM authors'),\n      paths = ids.map(id => ({\n    params: {\n      id: String(id.id)\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params: {\n    id\n  }\n}) {\n  let author = await queryDB('SELECT * FROM authors WHERE id = $1', [id]),\n      articles = await queryDB('SELECT * FROM articles WHERE author = $1', [JSON.stringify({\n    id,\n    name: author.name\n  })]);\n  return {\n    props: {\n      author,\n      articles: articles.map(article => _objectSpread(_objectSpread({}, article), {}, {\n        publish_date: JSON.stringify(article.publish_date)\n      }))\n    }\n  };\n}\nexport default Author;","map":null,"metadata":{},"sourceType":"module"}