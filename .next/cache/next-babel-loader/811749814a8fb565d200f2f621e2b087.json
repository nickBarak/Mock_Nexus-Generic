{"ast":null,"code":"export function convertDate(date) {\n  var now = new Date(),\n      secondsPast = (now.getTime() - date) / 1000;\n\n  if (secondsPast < 60) {\n    return parseInt(secondsPast) + \" second\".concat(parseInt(secondsPast) > 1 ? 's' : '', \" ago\");\n  }\n\n  if (secondsPast < 3600) {\n    return parseInt(secondsPast / 60) + \" minute\".concat(parseInt(secondsPast / 60) > 1 ? 's' : '', \" ago\");\n  }\n\n  if (secondsPast <= 86400) {\n    return parseInt(secondsPast / 3600) + \" hour\".concat(parseInt(secondsPast / 3600) > 1 ? 's' : '', \" ago\");\n  }\n\n  return new Date(date).toLocaleDateString('default', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n}\nexport function convertToPath(string) {\n  return string.toLowerCase().replace(/ /g, '-').replace(/[:'!@#$%^&*\\(\\)\";{}\\[\\]\\|~`<>\\/\\\\?\\.,]/g, '');\n}\nexport function convertFromPath(path) {\n  return path.split('-').map(function (word, i) {\n    return i === 0 || !['the', 'on', 'and', 'previews', 'whats'].includes(word) ? !['tv', 'aj', 'cola', 'ucsb', 'uc'].includes(word) ? word[0].toUpperCase() + word.slice(1) : word.toUpperCase() : !['previews', 'whats'].includes(word) ? word : word === 'previews' ? 'Previewsd' : 'What\\'s';\n  }).join(' ');\n}\nexport function testEmail(email) {\n  return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(email);\n}\nexport function copyToClipboard(text) {\n  var el = document.createElement('input');\n  el.value = text;\n  el.style.visibility = 'none';\n  el.style.height = 0;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n}","map":{"version":3,"sources":["C:/Users/nicho/Code/Portfolio/mock_nexus/Functions.js"],"names":["convertDate","date","now","Date","secondsPast","getTime","parseInt","toLocaleDateString","day","month","year","convertToPath","string","toLowerCase","replace","convertFromPath","path","split","map","word","i","includes","toUpperCase","slice","join","testEmail","email","test","copyToClipboard","text","el","document","createElement","value","style","visibility","height","body","appendChild","select","execCommand"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AAAA,MACIC,WAAW,GAAG,CAACF,GAAG,CAACG,OAAJ,KAAgBJ,IAAjB,IAAyB,IAD3C;;AAEA,MAAIG,WAAW,GAAG,EAAlB,EAAsB;AAClB,WAAOE,QAAQ,CAACF,WAAD,CAAR,oBAAkCE,QAAQ,CAACF,WAAD,CAAR,GAAwB,CAAxB,GAA4B,GAA5B,GAAkC,EAApE,SAAP;AACH;;AACD,MAAIA,WAAW,GAAG,IAAlB,EAAwB;AACpB,WAAOE,QAAQ,CAACF,WAAW,GAAG,EAAf,CAAR,oBAAuCE,QAAQ,CAACF,WAAW,GAAG,EAAf,CAAR,GAA6B,CAA7B,GAAiC,GAAjC,GAAuC,EAA9E,SAAP;AACH;;AACD,MAAIA,WAAW,IAAI,KAAnB,EAA0B;AACtB,WAAOE,QAAQ,CAACF,WAAW,GAAG,IAAf,CAAR,kBAAuCE,QAAQ,CAACF,WAAW,GAAG,IAAf,CAAR,GAA+B,CAA/B,GAAmC,GAAnC,GAAyC,EAAhF,SAAP;AACH;;AACD,SAAO,IAAID,IAAJ,CAASF,IAAT,EAAeM,kBAAf,CAAkC,SAAlC,EAA6C;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAE,MAAzB;AAAiCC,IAAAA,IAAI,EAAE;AAAvC,GAA7C,CAAP;AACH;AAED,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAClC,SAAOA,MAAM,CAACC,WAAP,GAAqBC,OAArB,CAA6B,IAA7B,EAAmC,GAAnC,EAAwCA,OAAxC,CAAgD,yCAAhD,EAA2F,EAA3F,CAAP;AACH;AAED,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAClC,SAAOA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAOC,CAAP;AAAA,WACtBA,CAAC,KAAK,CAAN,IAAW,CAAC,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,UAArB,EAAiC,OAAjC,EAA0CC,QAA1C,CAAmDF,IAAnD,CAAb,GACM,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,MAAb,EAAqB,MAArB,EAA6B,IAA7B,EAAmCE,QAAnC,CAA4CF,IAA5C,CAAD,GACIA,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,KAAwBH,IAAI,CAACI,KAAL,CAAW,CAAX,CAD5B,GAEIJ,IAAI,CAACG,WAAL,EAHV,GAIM,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsBD,QAAtB,CAA+BF,IAA/B,CAAD,GACIA,IADJ,GAEIA,IAAI,KAAK,UAAT,GAAsB,WAAtB,GAAoC,SAPvB;AAAA,GAApB,EAOsDK,IAPtD,CAO2D,GAP3D,CAAP;AAQH;AAED,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,SAAO,icAAicC,IAAjc,CAAscD,KAAtc,CAAP;AACH;AAED,OAAO,SAASE,eAAT,CAAyBC,IAAzB,EAA+B;AAClC,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACAF,EAAAA,EAAE,CAACG,KAAH,GAAWJ,IAAX;AACAC,EAAAA,EAAE,CAACI,KAAH,CAASC,UAAT,GAAsB,MAAtB;AACAL,EAAAA,EAAE,CAACI,KAAH,CAASE,MAAT,GAAkB,CAAlB;AACAL,EAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,EAA1B;AACAA,EAAAA,EAAE,CAACS,MAAH;AACAR,EAAAA,QAAQ,CAACS,WAAT,CAAqB,MAArB;AACH","sourcesContent":["export function convertDate(date) {\r\n    let now = new Date(),\r\n        secondsPast = (now.getTime() - date) / 1000;\r\n    if (secondsPast < 60) {\r\n        return parseInt(secondsPast) + ` second${parseInt(secondsPast) > 1 ? 's' : ''} ago`;\r\n    }\r\n    if (secondsPast < 3600) {\r\n        return parseInt(secondsPast / 60) + ` minute${parseInt(secondsPast / 60) > 1 ? 's' : ''} ago`;\r\n    }\r\n    if (secondsPast <= 86400) {\r\n        return parseInt(secondsPast / 3600) + ` hour${parseInt(secondsPast / 3600) > 1 ? 's' : ''} ago`;\r\n    }\r\n    return new Date(date).toLocaleDateString('default', { day: 'numeric', month: 'long', year: 'numeric' })\r\n}\r\n\r\nexport function convertToPath(string) {\r\n    return string.toLowerCase().replace(/ /g, '-').replace(/[:'!@#$%^&*\\(\\)\";{}\\[\\]\\|~`<>\\/\\\\?\\.,]/g, '')\r\n}\r\n\r\nexport function convertFromPath(path) {\r\n    return path.split('-').map((word, i) =>\r\n        (i === 0 || !['the', 'on', 'and', 'previews', 'whats'].includes(word))\r\n            ? !['tv', 'aj', 'cola', 'ucsb', 'uc'].includes(word)\r\n                ? word[0].toUpperCase() + word.slice(1)\r\n                : word.toUpperCase()\r\n            : !['previews', 'whats'].includes(word)\r\n                ? word\r\n                : word === 'previews' ? 'Previewsd' : 'What\\'s').join(' ')\r\n}\r\n\r\nexport function testEmail(email) {\r\n    return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(email)\r\n}\r\n\r\nexport function copyToClipboard(text) {\r\n    const el = document.createElement('input');\r\n    el.value = text;\r\n    el.style.visibility = 'none';\r\n    el.style.height = 0;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n}"]},"metadata":{},"sourceType":"module"}