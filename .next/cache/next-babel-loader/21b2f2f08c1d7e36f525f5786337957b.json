{"ast":null,"code":"export async function queryDB(pool, query, params = []) {\n  try {\n    var client = await pool.connect(),\n        {\n      rows\n    } = await client.query(query, params);\n  } catch (e) {\n    console.log(e);\n  } finally {\n    client.release();\n  }\n\n  return rows;\n}\nexport async function getCategories(pool) {\n  let categories = await queryDB(pool, \"SELECT * FROM categories WHERE title <> 'Headlines' AND title <> 'Labyrinth'\");\n\n  for (let category of categories) {\n    for (let id of category.articles) {\n      let hydratedArticle = await queryDB(pool, \"SELECT * FROM articles WHERE id = $1\", [id]);\n      category.articles.splice(category.articles.indexOf(id), 1, hydratedArticle[0]);\n    }\n  }\n\n  return categories;\n}\nexport function convertDate(date) {\n  return new Date(date).toLocaleDateString('default', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  });\n}","map":{"version":3,"sources":["C:/Users/nicho/code/portfolio/mock_nexus/Functions.js"],"names":["queryDB","pool","query","params","client","connect","rows","e","console","log","release","getCategories","categories","category","id","articles","hydratedArticle","splice","indexOf","convertDate","date","Date","toLocaleDateString","day","month","year"],"mappings":"AAAA,OAAO,eAAeA,OAAf,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,MAAM,GAAC,EAA3C,EAA+C;AAClD,MAAI;AACA,QAAIC,MAAM,GAAG,MAAMH,IAAI,CAACI,OAAL,EAAnB;AAAA,QACI;AAAEC,MAAAA;AAAF,QAAW,MAAMF,MAAM,CAACF,KAAP,CAAaA,KAAb,EAAoBC,MAApB,CADrB;AAEH,GAHD,CAGE,OAAOI,CAAP,EAAU;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAgB,GAH9B,SAIQ;AAAEH,IAAAA,MAAM,CAACM,OAAP;AAAkB;;AAC5B,SAAOJ,IAAP;AACH;AAED,OAAO,eAAeK,aAAf,CAA6BV,IAA7B,EAAmC;AACtC,MAAIW,UAAU,GAAG,MAAMZ,OAAO,CAACC,IAAD,EAAO,8EAAP,CAA9B;;AAEA,OAAK,IAAIY,QAAT,IAAqBD,UAArB,EAAiC;AAC7B,SAAK,IAAIE,EAAT,IAAeD,QAAQ,CAACE,QAAxB,EAAkC;AAC9B,UAAIC,eAAe,GAAG,MAAMhB,OAAO,CAACC,IAAD,EAAO,sCAAP,EAA+C,CAACa,EAAD,CAA/C,CAAnC;AACAD,MAAAA,QAAQ,CAACE,QAAT,CAAkBE,MAAlB,CAAyBJ,QAAQ,CAACE,QAAT,CAAkBG,OAAlB,CAA0BJ,EAA1B,CAAzB,EAAwD,CAAxD,EAA2DE,eAAe,CAAC,CAAD,CAA1E;AACH;AACJ;;AAED,SAAOJ,UAAP;AACH;AAED,OAAO,SAASO,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,SAAO,IAAIC,IAAJ,CAASD,IAAT,EAAeE,kBAAf,CAAkC,SAAlC,EAA6C;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAE,MAAzB;AAAiCC,IAAAA,IAAI,EAAE;AAAvC,GAA7C,CAAP;AACH","sourcesContent":["export async function queryDB(pool, query, params=[]) {\r\n    try {\r\n        var client = await pool.connect(),\r\n            { rows } = await client.query(query, params);\r\n    } catch (e) { console.log(e) }\r\n    finally { client.release() }\r\n    return rows;\r\n}\r\n\r\nexport async function getCategories(pool) {\r\n    let categories = await queryDB(pool, \"SELECT * FROM categories WHERE title <> 'Headlines' AND title <> 'Labyrinth'\");\r\n\r\n    for (let category of categories) {\r\n        for (let id of category.articles) {\r\n            let hydratedArticle = await queryDB(pool, \"SELECT * FROM articles WHERE id = $1\", [id]);\r\n            category.articles.splice(category.articles.indexOf(id), 1, hydratedArticle[0]);\r\n        }\r\n    }\r\n\r\n    return categories;\r\n}\r\n\r\nexport function convertDate(date) {\r\n    return new Date(date).toLocaleDateString('default', { day: 'numeric', month: 'long', year: 'numeric' })\r\n}"]},"metadata":{},"sourceType":"module"}