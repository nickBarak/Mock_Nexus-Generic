{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicho\\\\code\\\\portfolio\\\\mock_nexus\\\\pages\\\\categories\\\\[category]\\\\[subcategory].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { queryDB, getCategories } from '../../../db';\nimport ArticleDisplay from '../../../components/ArticleDisplay';\nimport Layout from '../../../layouts';\nimport { convertToPath } from '../../../Functions';\nexport async function getStaticPaths() {\n  let categories = await queryDB(\"SELECT title, subcategories FROM categories WHERE title <> 'Labyrinth' AND title <> 'Headlines'\"),\n      paths = categories.reduce((acc, category) => [...acc, ...Object.keys(category.subcategories).map(subcategory => ({\n    params: {\n      category: convertToPath(category.title),\n      subcategory: convertToPath(subcategory)\n    }\n  }))], []);\n  return JSON.parse(JSON.stringify({\n    paths,\n    fallback: false\n  }));\n}\nexport async function getStaticProps({\n  params: {\n    category,\n    subcategory\n  }\n}) {\n  subcategories = await queryDB('SELECT subcategories FROM categories WHERE title = $1', [convertFromPath(category)]), articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1)', [subcategories[0].subcategories[convertFromPath(subcategory)]]);\n  return {\n    props: JSON.parse(JSON.stringify({\n      heading: convertFromPath(subcategory),\n      articles,\n      categories: await getCategories()\n    }))\n  };\n}\nexport default (({\n  heading,\n  articles,\n  categories\n}) => __jsx(Layout, {\n  categories: categories,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 55\n  }\n}, \" \", __jsx(ArticleDisplay, {\n  type: 'subcategory',\n  heading: heading,\n  articles: articles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 88\n  }\n}), \" \"));","map":{"version":3,"sources":["C:/Users/nicho/code/portfolio/mock_nexus/pages/categories/[category]/[subcategory].js"],"names":["queryDB","getCategories","ArticleDisplay","Layout","convertToPath","getStaticPaths","categories","paths","reduce","acc","category","Object","keys","subcategories","map","subcategory","params","title","JSON","parse","stringify","fallback","getStaticProps","convertFromPath","articles","props","heading"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,aAAvC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC,MAAIC,UAAU,GAAG,MAAMN,OAAO,CAAC,iGAAD,CAA9B;AAAA,MACIO,KAAK,GAAGD,UAAU,CACbE,MADG,CACI,CAACC,GAAD,EAAMC,QAAN,KAAmB,CACvB,GAAGD,GADoB,EAEvB,GAAGE,MAAM,CAACC,IAAP,CAAYF,QAAQ,CAACG,aAArB,EACEC,GADF,CACMC,WAAW,KAAK;AAAEC,IAAAA,MAAM,EAAE;AAAEN,MAAAA,QAAQ,EAAEN,aAAa,CAACM,QAAQ,CAACO,KAAV,CAAzB;AAA2CF,MAAAA,WAAW,EAAEX,aAAa,CAACW,WAAD;AAArE;AAAV,GAAL,CADjB,CAFoB,CADvB,EAKD,EALC,CADZ;AAQA,SAAOG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe;AAAEb,IAAAA,KAAF;AAASc,IAAAA,QAAQ,EAAE;AAAnB,GAAf,CAAX,CAAP;AACH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEN,EAAAA,MAAM,EAAE;AAAEN,IAAAA,QAAF;AAAYK,IAAAA;AAAZ;AAAV,CAA9B,EAAqE;AACpEF,EAAAA,aAAa,GAAG,MAAMb,OAAO,CAAC,uDAAD,EAA0D,CAACuB,eAAe,CAACb,QAAD,CAAhB,CAA1D,CAA7B,EACAc,QAAQ,GAAG,MAAMxB,OAAO,CAAC,2CAAD,EAA8C,CAAEa,aAAa,CAAC,CAAD,CAAb,CAAiBA,aAAjB,CAA+BU,eAAe,CAACR,WAAD,CAA9C,CAAF,CAA9C,CADxB;AAGJ,SAAO;AACHU,IAAAA,KAAK,EAAEP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe;AAC7BM,MAAAA,OAAO,EAAEH,eAAe,CAACR,WAAD,CADK;AAE7BS,MAAAA,QAF6B;AAG7BlB,MAAAA,UAAU,EAAE,MAAML,aAAa;AAHF,KAAf,CAAX;AADJ,GAAP;AAOH;AAED,gBAAe,CAAC;AAAEyB,EAAAA,OAAF;AAAWF,EAAAA,QAAX;AAAqBlB,EAAAA;AAArB,CAAD,KAAuC,MAAC,MAAD;AAAQ,EAAA,UAAU,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAiC,MAAC,cAAD;AAAgB,EAAA,IAAI,EAAE,aAAtB;AAAqC,EAAA,OAAO,EAAEoB,OAA9C;AAAuD,EAAA,QAAQ,EAAEF,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAjC,MAAtD","sourcesContent":["import { queryDB, getCategories } from '../../../db';\r\nimport ArticleDisplay from '../../../components/ArticleDisplay';\r\nimport Layout from '../../../layouts';\r\nimport { convertToPath } from '../../../Functions';\r\n\r\nexport async function getStaticPaths() {\r\n    let categories = await queryDB(\"SELECT title, subcategories FROM categories WHERE title <> 'Labyrinth' AND title <> 'Headlines'\"),\r\n        paths = categories\r\n            .reduce((acc, category) => [\r\n                ...acc,\r\n                ...Object.keys(category.subcategories)\r\n                    .map(subcategory => ({ params: { category: convertToPath(category.title), subcategory: convertToPath(subcategory) } }))\r\n            ], []);\r\n\r\n    return JSON.parse(JSON.stringify({ paths, fallback: false }))\r\n}\r\n\r\nexport async function getStaticProps({ params: { category, subcategory } }) {\r\n        subcategories = await queryDB('SELECT subcategories FROM categories WHERE title = $1', [convertFromPath(category)]),\r\n        articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1)', [ subcategories[0].subcategories[convertFromPath(subcategory)] ]);\r\n\r\n    return {\r\n        props: JSON.parse(JSON.stringify({\r\n            heading: convertFromPath(subcategory),\r\n            articles,\r\n            categories: await getCategories()\r\n        }))\r\n    }\r\n}\r\n\r\nexport default ({ heading, articles, categories }) => <Layout categories={categories}> <ArticleDisplay type={'subcategory'} heading={heading} articles={articles} /> </Layout>"]},"metadata":{},"sourceType":"module"}