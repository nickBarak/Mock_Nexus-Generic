{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicho\\\\Code\\\\Portfolio\\\\mock_nexus\\\\pages\\\\categories\\\\[category].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { queryDB } from '../../db';\nimport ArticleDisplay from '../../components/ArticleDisplay';\nimport Layout from '../../layouts';\nimport { convertToPath, convertFromPath } from '../../Functions';\nexport async function getStaticPaths() {\n  let categories = await queryDB(\"SELECT title, articles FROM categories WHERE title <> 'Labyrinth' AND title <> 'Headlines'\"),\n      paths = categories.map(({\n    title\n  }) => ({\n    params: {\n      category: convertToPath(title)\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params: {\n    category\n  }\n}) {\n  let [articleIDs] = await queryDB('SELECT articles FROM categories WHERE title = $1', [convertFromPath(category)]),\n      articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1) ORDER BY publish_date DESC FETCH FIRST 15 ROWS ONLY', [articleIDs.articles]);\n  console.log(articleIDs.articles.length);\n  return {\n    props: JSON.parse(JSON.stringify({\n      heading: convertFromPath(category),\n      articles,\n      footerData: {\n        route: '/categories/' + category,\n        page: 1,\n        highestPage: Math.ceil(articleIDs.articles.length / 15)\n      }\n    }))\n  };\n}\n\nfunction Category({\n  heading,\n  articles,\n  footerData\n}) {\n  return __jsx(Layout, {\n    footerData: footerData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(ArticleDisplay, {\n    type: \"category\",\n    heading: heading,\n    articles: articles,\n    page: footerData.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/nicho/Code/Portfolio/mock_nexus/pages/categories/[category].js"],"names":["queryDB","ArticleDisplay","Layout","convertToPath","convertFromPath","getStaticPaths","categories","paths","map","title","params","category","fallback","getStaticProps","articleIDs","articles","console","log","length","props","JSON","parse","stringify","heading","footerData","route","page","highestPage","Math","ceil","Category"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,UAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,iBAA/C;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC,MAAIC,UAAU,GAAG,MAAMN,OAAO,CAAC,4FAAD,CAA9B;AAAA,MACIO,KAAK,GAAGD,UAAU,CAACE,GAAX,CAAe,CAAC;AAACC,IAAAA;AAAD,GAAD,MAAc;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAER,aAAa,CAACM,KAAD;AAAzB;AAAV,GAAd,CAAf,CADZ;AAGA,SAAO;AAAEF,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAA9B,EAAwD;AAC3D,MAAI,CAACG,UAAD,IAAe,MAAMd,OAAO,CAAC,kDAAD,EAAqD,CAACI,eAAe,CAACO,QAAD,CAAhB,CAArD,CAAhC;AAAA,MACII,QAAQ,GAAG,MAAMf,OAAO,CAAC,+FAAD,EAAkG,CAACc,UAAU,CAACC,QAAZ,CAAlG,CAD5B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACC,QAAX,CAAoBG,MAAhC;AACA,SAAO;AACHC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe;AAC7BC,MAAAA,OAAO,EAAEnB,eAAe,CAACO,QAAD,CADK;AAE7BI,MAAAA,QAF6B;AAG7BS,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,iBAAiBd,QADhB;AAERe,QAAAA,IAAI,EAAE,CAFE;AAGRC,QAAAA,WAAW,EAAEC,IAAI,CAACC,IAAL,CAAUf,UAAU,CAACC,QAAX,CAAoBG,MAApB,GAA6B,EAAvC;AAHL;AAHiB,KAAf,CAAX;AADJ,GAAP;AAWH;;AAED,SAASY,QAAT,CAAkB;AAAEP,EAAAA,OAAF;AAAWR,EAAAA,QAAX;AAAqBS,EAAAA;AAArB,CAAlB,EAAqD;AACjD,SACI,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,UAArB;AAAgC,IAAA,OAAO,EAAED,OAAzC;AAAkD,IAAA,QAAQ,EAAER,QAA5D;AAAsE,IAAA,IAAI,EAAES,UAAU,CAACE,IAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAED,eAAeI,QAAf","sourcesContent":["import { queryDB } from '../../db';\r\nimport ArticleDisplay from '../../components/ArticleDisplay';\r\nimport Layout from '../../layouts';\r\nimport { convertToPath, convertFromPath } from '../../Functions';\r\n\r\nexport async function getStaticPaths() {\r\n    let categories = await queryDB(\"SELECT title, articles FROM categories WHERE title <> 'Labyrinth' AND title <> 'Headlines'\"),\r\n        paths = categories.map(({title}) => ({ params: { category: convertToPath(title) } }));\r\n\r\n    return { paths, fallback: false }\r\n}\r\n\r\nexport async function getStaticProps({ params: { category } }) {\r\n    let [articleIDs] = await queryDB('SELECT articles FROM categories WHERE title = $1', [convertFromPath(category)]),\r\n        articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1) ORDER BY publish_date DESC FETCH FIRST 15 ROWS ONLY', [articleIDs.articles]);\r\n    console.log(articleIDs.articles.length);\r\n    return {\r\n        props: JSON.parse(JSON.stringify({\r\n            heading: convertFromPath(category),\r\n            articles,\r\n            footerData: {\r\n                route: '/categories/' + category,\r\n                page: 1,\r\n                highestPage: Math.ceil(articleIDs.articles.length / 15)\r\n            }\r\n        }))\r\n    }\r\n}\r\n\r\nfunction Category({ heading, articles, footerData }) {\r\n    return (\r\n        <Layout footerData={footerData}>\r\n            <ArticleDisplay type=\"category\" heading={heading} articles={articles} page={footerData.page} />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}