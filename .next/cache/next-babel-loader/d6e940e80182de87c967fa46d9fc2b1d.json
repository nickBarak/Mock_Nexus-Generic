{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { queryDB, getCategories } from '../../Functions';\nimport ArticleDisplay from '../../components/ArticleDisplay';\nimport Layout from '../../layouts';\nexport async function getStaticPaths() {\n  let titles = await queryDB(\"SELECT title FROM categories WHERE title <> 'Labyrinth'\");\n  let paths = titles.map(title => ({\n    params: {\n      category: title.title.toLowerCase().replace(/ /g, '-')\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  let title = params.category.split('-').map((word, i) => i === 0 || !['the', 'on'].includes(word) ? word[0].toUpperCase() + word.slice(1) : word).join(' '),\n      articleIDs = await queryDB('SELECT articles FROM categories WHERE title = $1', [title]),\n      articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1)', [articleIDs[0].articles]);\n  return {\n    props: JSON.parse(JSON.stringify({\n      heading: title,\n      articles,\n      categories: await getCategories()\n    }))\n  };\n}\nexport default (({\n  heading,\n  articles,\n  categories\n}) => __jsx(Layout, {\n  categories: categories\n}, \" \", __jsx(ArticleDisplay, {\n  type: \"category\",\n  heading: heading,\n  articles: articles\n}), \" \"));","map":null,"metadata":{},"sourceType":"module"}