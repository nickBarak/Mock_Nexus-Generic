{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nicho\\\\code\\\\portfolio\\\\mock_nexus\\\\pages\\\\authors\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ArticlePreview from '../../components/ArticlePreview';\nimport Layout from \"../../layouts\";\nexport var __N_SSG = true;\nexport default (function (_ref) {\n  var author = _ref.author,\n      articles = _ref.articles,\n      categories = _ref.categories;\n  return __jsx(Layout, {\n    categories: categories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 54\n    }\n  }, __jsx(ArticleDisplay, {\n    type: 'author-page',\n    heading: author,\n    articles: articles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/nicho/code/portfolio/mock_nexus/pages/authors/[id].js"],"names":["ArticlePreview","Layout","author","articles","categories"],"mappings":";;;;;AACA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAgBA,gBAAe;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,QAAX,QAAWA,QAAX;AAAA,MAAqBC,UAArB,QAAqBA,UAArB;AAAA,SAAsC,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACrD,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,aAAtB;AAAqC,IAAA,OAAO,EAAEF,MAA9C;AAAsD,IAAA,QAAQ,EAAEC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqD,CAAtC;AAAA,CAAf","sourcesContent":["import { queryDB, getCategories } from \"../../db\";\r\nimport ArticlePreview from '../../components/ArticlePreview';\r\nimport Layout from \"../../layouts\";\r\n\r\nexport async function getStaticPaths() {\r\n    let ids = await queryDB('SELECT id FROM authors'),\r\n        paths = ids.map(id => ({ params: { id: String(id.id) } }));\r\n\r\n    return { paths, fallback: false }\r\n}\r\n\r\nexport async function getStaticProps({ params: { id } }) {\r\n    let [author] = await queryDB('SELECT * FROM authors WHERE id = $1', [id]),\r\n        articles = await queryDB('SELECT * FROM articles WHERE author = $1', [JSON.stringify({ id: Number(id), name: author.name })]);\r\n\r\n    return { props: JSON.parse(JSON.stringify({ author: author.name, articles, categories: await getCategories() })) }\r\n}\r\n\r\nexport default ({ author, articles, categories }) => <Layout categories={categories}>\r\n<ArticleDisplay type={'author-page'} heading={author} articles={articles} />\r\n</Layout>"]},"metadata":{},"sourceType":"module"}