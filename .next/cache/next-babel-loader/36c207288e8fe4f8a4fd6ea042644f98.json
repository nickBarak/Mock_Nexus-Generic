{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicho\\\\Code\\\\Portfolio\\\\mock_nexus\\\\pages\\\\authors\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { queryDB, getCategories } from \"../../db\";\nimport ArticleDisplay from '../../components/ArticleDisplay';\nimport Layout from \"../../layouts\";\nexport async function getStaticPaths() {\n  let ids = await queryDB('SELECT id FROM authors'),\n      paths = ids.map(id => ({\n    params: {\n      id: String(id.id)\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params: {\n    id\n  }\n}) {\n  let [author] = await queryDB('SELECT * FROM authors WHERE id = $1', [id]),\n      articles = await queryDB(\"SELECT * FROM articles WHERE author = $1 ORDER BY publish_date DESC\", [JSON.stringify({\n    \"id\": Number(id),\n    \"name\": author.name\n  })]);\n  return {\n    props: JSON.parse(JSON.stringify({\n      author: author.name,\n      articles,\n      categories: await getCategories(),\n      footerData: {\n        page: 1,\n        highestPage: 10,\n        route: '/authors/' + id\n      }\n    }))\n  };\n}\nexport default (({\n  author,\n  articles,\n  categories,\n  footerData\n}) => __jsx(Layout, {\n  categories: categories,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 66\n  }\n}, __jsx(ArticleDisplay, {\n  type: \"author-page\",\n  heading: author,\n  articles: articles,\n  footerData: footerData,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 1\n  }\n})));","map":{"version":3,"sources":["C:/Users/nicho/Code/Portfolio/mock_nexus/pages/authors/[id].js"],"names":["queryDB","getCategories","ArticleDisplay","Layout","getStaticPaths","ids","paths","map","id","params","String","fallback","getStaticProps","author","articles","JSON","stringify","Number","name","props","parse","categories","footerData","page","highestPage","route"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,UAAvC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC,MAAIC,GAAG,GAAG,MAAML,OAAO,CAAC,wBAAD,CAAvB;AAAA,MACIM,KAAK,GAAGD,GAAG,CAACE,GAAJ,CAAQC,EAAE,KAAK;AAAEC,IAAAA,MAAM,EAAE;AAAED,MAAAA,EAAE,EAAEE,MAAM,CAACF,EAAE,CAACA,EAAJ;AAAZ;AAAV,GAAL,CAAV,CADZ;AAGA,SAAO;AAAEF,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA,MAAM,EAAE;AAAED,IAAAA;AAAF;AAAV,CAA9B,EAAkD;AACrD,MAAI,CAACK,MAAD,IAAW,MAAMb,OAAO,CAAC,qCAAD,EAAwC,CAACQ,EAAD,CAAxC,CAA5B;AAAA,MACIM,QAAQ,GAAG,MAAMd,OAAO,CAAC,qEAAD,EAAwE,CAACe,IAAI,CAACC,SAAL,CAAe;AAAE,UAAMC,MAAM,CAACT,EAAD,CAAd;AAAoB,YAAQK,MAAM,CAACK;AAAnC,GAAf,CAAD,CAAxE,CAD5B;AAGA,SAAO;AAAEC,IAAAA,KAAK,EAAEJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,SAAL,CAAe;AAAEH,MAAAA,MAAM,EAAEA,MAAM,CAACK,IAAjB;AAAuBJ,MAAAA,QAAvB;AAAiCO,MAAAA,UAAU,EAAE,MAAMpB,aAAa,EAAhE;AAAoEqB,MAAAA,UAAU,EAAE;AACtHC,QAAAA,IAAI,EAAE,CADgH;AAEtHC,QAAAA,WAAW,EAAE,EAFyG;AAGtHC,QAAAA,KAAK,EAAE,cAAcjB;AAHiG;AAAhF,KAAf,CAAX;AAAT,GAAP;AAKH;AAED,gBAAe,CAAC;AAAEK,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBO,EAAAA,UAApB;AAAgCC,EAAAA;AAAhC,CAAD,KAAkD,MAAC,MAAD;AAAQ,EAAA,UAAU,EAAED,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACjE,MAAC,cAAD;AAAgB,EAAA,IAAI,EAAC,aAArB;AAAmC,EAAA,OAAO,EAAER,MAA5C;AAAoD,EAAA,QAAQ,EAAEC,QAA9D;AAAwE,EAAA,UAAU,EAAEQ,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADiE,CAAjE","sourcesContent":["import { queryDB, getCategories } from \"../../db\";\r\nimport ArticleDisplay from '../../components/ArticleDisplay';\r\nimport Layout from \"../../layouts\";\r\n\r\nexport async function getStaticPaths() {\r\n    let ids = await queryDB('SELECT id FROM authors'),\r\n        paths = ids.map(id => ({ params: { id: String(id.id) } }));\r\n\r\n    return { paths, fallback: false }\r\n}\r\n\r\nexport async function getStaticProps({ params: { id } }) {\r\n    let [author] = await queryDB('SELECT * FROM authors WHERE id = $1', [id]),\r\n        articles = await queryDB(\"SELECT * FROM articles WHERE author = $1 ORDER BY publish_date DESC\", [JSON.stringify({ \"id\": Number(id), \"name\": author.name })]);\r\n\r\n    return { props: JSON.parse(JSON.stringify({ author: author.name, articles, categories: await getCategories(), footerData: {\r\n        page: 1,\r\n        highestPage: 10,\r\n        route: '/authors/' + id\r\n    } })) }\r\n}\r\n\r\nexport default ({ author, articles, categories, footerData }) => <Layout categories={categories}>\r\n<ArticleDisplay type=\"author-page\" heading={author} articles={articles} footerData={footerData} />\r\n</Layout>"]},"metadata":{},"sourceType":"module"}