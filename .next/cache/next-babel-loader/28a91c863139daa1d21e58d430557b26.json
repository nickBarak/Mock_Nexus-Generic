{"ast":null,"code":"import { queryDB } from '../../db';\nexport default async function (req, res) {\n  let {\n    id,\n    email,\n    article_id\n  } = req.body;\n\n  try {\n    let [articleComments] = await queryDB('SELECT comments FROM articles WHERE id = $1', [article_id]);\n    let [userComments] = await queryDB('SELECT comments FROM users WHERE email = $1', [email]);\n\n    function deleteComment(id, level) {\n      console.log(JSON.stringify(level));\n      return level.forEach(comment => {\n        if (comment.id === id) {\n          comment.content = comment.author = 'deleted';\n        } else deleteComment(id, comment.replies);\n      });\n    }\n\n    deleteComment(id, articleComments.comments);\n    deleteComment(id, userComments);\n    await queryDB('UPDATE articles SET comments = $1 WHERE id = $2', [articleComments.comments, article_id]);\n    await queryDB('UPDATE users SET comments = $1 WHERE email = $2', [userComments.comments, email]);\n    res.json(0);\n    res.end();\n  } catch (e) {\n    console.log(e);\n  }\n}","map":{"version":3,"sources":["C:/Users/nicho/Code/Portfolio/mock_nexus/pages/api/delete-comment.js"],"names":["queryDB","req","res","id","email","article_id","body","articleComments","userComments","deleteComment","level","console","log","JSON","stringify","forEach","comment","content","author","replies","comments","json","end","e"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AAEA,eAAe,gBAAeC,GAAf,EAAoBC,GAApB,EAAyB;AACpC,MAAI;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAA4BJ,GAAG,CAACK,IAApC;;AACA,MAAI;AACA,QAAI,CAACC,eAAD,IAAoB,MAAMP,OAAO,CAAC,6CAAD,EAAgD,CAACK,UAAD,CAAhD,CAArC;AACA,QAAI,CAACG,YAAD,IAAiB,MAAMR,OAAO,CAAC,6CAAD,EAAgD,CAACI,KAAD,CAAhD,CAAlC;;AACA,aAASK,aAAT,CAAuBN,EAAvB,EAA2BO,KAA3B,EAAkC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAZ;AACA,aAAOA,KAAK,CAACK,OAAN,CAAcC,OAAO,IAAI;AAC5B,YAAIA,OAAO,CAACb,EAAR,KAAeA,EAAnB,EAAuB;AACnBa,UAAAA,OAAO,CAACC,OAAR,GAAkBD,OAAO,CAACE,MAAR,GAAiB,SAAnC;AACH,SAFD,MAEOT,aAAa,CAACN,EAAD,EAAKa,OAAO,CAACG,OAAb,CAAb;AACV,OAJM,CAAP;AAKH;;AACDV,IAAAA,aAAa,CAACN,EAAD,EAAKI,eAAe,CAACa,QAArB,CAAb;AACAX,IAAAA,aAAa,CAACN,EAAD,EAAKK,YAAL,CAAb;AACA,UAAMR,OAAO,CAAC,iDAAD,EAAoD,CAACO,eAAe,CAACa,QAAjB,EAA2Bf,UAA3B,CAApD,CAAb;AACA,UAAML,OAAO,CAAC,iDAAD,EAAoD,CAACQ,YAAY,CAACY,QAAd,EAAwBhB,KAAxB,CAApD,CAAb;AACAF,IAAAA,GAAG,CAACmB,IAAJ,CAAS,CAAT;AACAnB,IAAAA,GAAG,CAACoB,GAAJ;AACH,GAjBD,CAiBE,OAAOC,CAAP,EAAU;AAAEZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AAAgB;AACjC","sourcesContent":["import { queryDB } from '../../db';\r\n\r\nexport default async function(req, res) {\r\n    let { id, email, article_id } = req.body;\r\n    try {\r\n        let [articleComments] = await queryDB('SELECT comments FROM articles WHERE id = $1', [article_id]);\r\n        let [userComments] = await queryDB('SELECT comments FROM users WHERE email = $1', [email]);\r\n        function deleteComment(id, level) {\r\n            console.log(JSON.stringify(level));\r\n            return level.forEach(comment => {\r\n                if (comment.id === id) {\r\n                    comment.content = comment.author = 'deleted';\r\n                } else deleteComment(id, comment.replies);\r\n            });\r\n        }\r\n        deleteComment(id, articleComments.comments);\r\n        deleteComment(id, userComments);\r\n        await queryDB('UPDATE articles SET comments = $1 WHERE id = $2', [articleComments.comments, article_id]);\r\n        await queryDB('UPDATE users SET comments = $1 WHERE email = $2', [userComments.comments, email]);\r\n        res.json(0);\r\n        res.end();\r\n    } catch (e) { console.log(e) }\r\n}"]},"metadata":{},"sourceType":"module"}