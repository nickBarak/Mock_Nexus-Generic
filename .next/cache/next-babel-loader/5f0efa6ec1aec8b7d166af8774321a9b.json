{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicho\\\\code\\\\portfolio\\\\mock_nexus\\\\pages\\\\categories\\\\[category].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { queryDB } from '../../Functions';\nimport ArticleDisplay from '../../components/ArticleDisplay';\nexport async function getStaticPaths() {\n  let titles = await queryDB(\"SELECT title FROM categories WHERE title <> 'Labyrinth'\");\n  let paths = titles.map(title => ({\n    params: {\n      category: title.title.toLowerCase().replace(/ /g, '-')\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  let title = params.category.split('-').map((word, i) => i === 0 || !['the', 'on'].includes(word) ? word[0].toUpperCase() + word.slice(1) : word).join(' '),\n      articleIDs = await queryDB('SELECT articles FROM categories WHERE title = $1', [title]),\n      articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1)', [articleIDs.articles.map(id => Number(id))]);\n  return {\n    props: JSON.parse(JSON.stringify({\n      heading: title,\n      articles\n    }))\n  };\n}\nexport default (({\n  heading,\n  articles\n}) => __jsx(ArticleDisplay, {\n  type: \"category\",\n  heading: heading,\n  articles: articles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 43\n  }\n}));","map":{"version":3,"sources":["C:/Users/nicho/code/portfolio/mock_nexus/pages/categories/[category].js"],"names":["queryDB","ArticleDisplay","getStaticPaths","titles","paths","map","title","params","category","toLowerCase","replace","fallback","getStaticProps","split","word","i","includes","toUpperCase","slice","join","articleIDs","articles","id","Number","props","JSON","parse","stringify","heading"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC,MAAIC,MAAM,GAAG,MAAMH,OAAO,CAAC,yDAAD,CAA1B;AACA,MAAII,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAWC,KAAK,KAAK;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEF,KAAK,CAACA,KAAN,CAAYG,WAAZ,GAA0BC,OAA1B,CAAkC,IAAlC,EAAwC,GAAxC;AAAZ;AAAV,GAAL,CAAhB,CAAZ;AAEA,SAAO;AAAEN,IAAAA,KAAF;AAASO,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEL,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,MAAID,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBK,KAAhB,CAAsB,GAAtB,EAA2BR,GAA3B,CAA+B,CAACS,IAAD,EAAOC,CAAP,KAAcA,CAAC,KAAK,CAAN,IAAW,CAAC,CAAC,KAAD,EAAQ,IAAR,EAAcC,QAAd,CAAuBF,IAAvB,CAAb,GAA6CA,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,KAAwBH,IAAI,CAACI,KAAL,CAAW,CAAX,CAArE,GAAqFJ,IAAjI,EAAuIK,IAAvI,CAA4I,GAA5I,CAAZ;AAAA,MACIC,UAAU,GAAG,MAAMpB,OAAO,CAAC,kDAAD,EAAqD,CAACM,KAAD,CAArD,CAD9B;AAAA,MAEIe,QAAQ,GAAG,MAAMrB,OAAO,CAAC,2CAAD,EAA8C,CAACoB,UAAU,CAACC,QAAX,CAAoBhB,GAApB,CAAwBiB,EAAE,IAAIC,MAAM,CAACD,EAAD,CAApC,CAAD,CAA9C,CAF5B;AAIA,SAAO;AACHE,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe;AAC7BC,MAAAA,OAAO,EAAEtB,KADoB;AAE7Be,MAAAA;AAF6B,KAAf,CAAX;AADJ,GAAP;AAMH;AAED,gBAAe,CAAC;AAAEO,EAAAA,OAAF;AAAWP,EAAAA;AAAX,CAAD,KAA2B,MAAC,cAAD;AAAgB,EAAA,IAAI,EAAC,UAArB;AAAgC,EAAA,OAAO,EAAEO,OAAzC;AAAkD,EAAA,QAAQ,EAAEP,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1C","sourcesContent":["import { queryDB } from '../../Functions';\r\nimport ArticleDisplay from '../../components/ArticleDisplay';\r\n\r\nexport async function getStaticPaths() {\r\n    let titles = await queryDB(\"SELECT title FROM categories WHERE title <> 'Labyrinth'\");\r\n    let paths = titles.map(title => ({ params: { category: title.title.toLowerCase().replace(/ /g, '-') } }));\r\n\r\n    return { paths, fallback: false }\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n    let title = params.category.split('-').map((word, i) => (i === 0 || !['the', 'on'].includes(word)) ? word[0].toUpperCase() + word.slice(1) : word).join(' '),\r\n        articleIDs = await queryDB('SELECT articles FROM categories WHERE title = $1', [title]),\r\n        articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1)', [articleIDs.articles.map(id => Number(id))]);\r\n\r\n    return {\r\n        props: JSON.parse(JSON.stringify({\r\n            heading: title,\r\n            articles\r\n        }))\r\n    }\r\n}\r\n\r\nexport default ({ heading, articles }) => <ArticleDisplay type=\"category\" heading={heading} articles={articles} />"]},"metadata":{},"sourceType":"module"}