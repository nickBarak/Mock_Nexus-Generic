{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport pool from '../../db';\nexport default async function (req, res) {\n  let newUser,\n      {\n    name,\n    email,\n    content,\n    articleID\n  } = req.body;\n\n  if (!/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(email)) {\n    res.json(1);\n    res.end();\n  }\n\n  let hydratedComment = {\n    article_id: articleID,\n    content,\n    post_date: Date.now()\n  };\n\n  try {\n    var client = await pool.connect(),\n        {\n      rows\n    } = await client.query('SELECT * FROM users WHERE email = $1', [email]),\n        [user] = rows;\n\n    if (user) {\n      if (user.name !== name) {\n        res.json(2);\n        res.end();\n      }\n\n      await client.query('UPDATE users SET comments = array_append(comments, $1) WHERE email = $2', [hydratedComment, email]);\n    } else {\n      newUser = true;\n      await client.query('INSERT INTO users (name, email, comments) VALUES ($1, $2, $3)', [name, email, []]);\n    }\n\n    await client.query('UPDATE articles SET comments = array_append(comments, $1) WHERE id = $2', [_objectSpread({\n      name,\n      email\n    }, hydratedComment), articleID]);\n\n    if (newUser) {\n      res.json(3);\n      res.end();\n    }\n\n    res.json();\n    res.end();\n  } catch (e) {\n    console.log(e);\n  } finally {\n    client.release();\n  }\n}","map":{"version":3,"sources":["C:/Users/nicho/Code/Portfolio/mock_nexus/pages/api/post-comment.js"],"names":["pool","req","res","newUser","name","email","content","articleID","body","test","json","end","hydratedComment","article_id","post_date","Date","now","client","connect","rows","query","user","e","console","log","release"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,UAAjB;AAEA,eAAe,gBAAeC,GAAf,EAAoBC,GAApB,EAAyB;AACpC,MAAIC,OAAJ;AAAA,MACI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAsCN,GAAG,CAACO,IAD9C;;AAEA,MAAI,CAAC,icAAicC,IAAjc,CAAscJ,KAAtc,CAAL,EAAmd;AAC/cH,IAAAA,GAAG,CAACQ,IAAJ,CAAS,CAAT;AACAR,IAAAA,GAAG,CAACS,GAAJ;AACH;;AACD,MAAIC,eAAe,GAAG;AAAEC,IAAAA,UAAU,EAAEN,SAAd;AAAyBD,IAAAA,OAAzB;AAAkCQ,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAA7C,GAAtB;;AACA,MAAI;AACA,QAAIC,MAAM,GAAG,MAAMjB,IAAI,CAACkB,OAAL,EAAnB;AAAA,QACI;AAAEC,MAAAA;AAAF,QAAW,MAAMF,MAAM,CAACG,KAAP,CAAa,sCAAb,EAAqD,CAACf,KAAD,CAArD,CADrB;AAAA,QAEI,CAACgB,IAAD,IAASF,IAFb;;AAGA,QAAIE,IAAJ,EAAU;AACN,UAAIA,IAAI,CAACjB,IAAL,KAAcA,IAAlB,EAAwB;AAAEF,QAAAA,GAAG,CAACQ,IAAJ,CAAS,CAAT;AAAaR,QAAAA,GAAG,CAACS,GAAJ;AAAW;;AAClD,YAAMM,MAAM,CAACG,KAAP,CAAa,yEAAb,EAAwF,CAACR,eAAD,EAAkBP,KAAlB,CAAxF,CAAN;AACH,KAHD,MAGO;AACHF,MAAAA,OAAO,GAAG,IAAV;AACA,YAAMc,MAAM,CAACG,KAAP,CAAa,+DAAb,EAA8E,CAAChB,IAAD,EAAOC,KAAP,EAAc,EAAd,CAA9E,CAAN;AACH;;AACD,UAAMY,MAAM,CAACG,KAAP,CAAa,yEAAb,EAAwF;AAAEhB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,OAAkBO,eAAlB,GAAoCL,SAApC,CAAxF,CAAN;;AACA,QAAIJ,OAAJ,EAAa;AAAED,MAAAA,GAAG,CAACQ,IAAJ,CAAS,CAAT;AAAaR,MAAAA,GAAG,CAACS,GAAJ;AAAY;;AACxCT,IAAAA,GAAG,CAACQ,IAAJ;AACAR,IAAAA,GAAG,CAACS,GAAJ;AACH,GAfD,CAeE,OAAOW,CAAP,EAAU;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAgB,GAf9B,SAgBQ;AAAEL,IAAAA,MAAM,CAACQ,OAAP;AAAkB;AAC/B","sourcesContent":["import pool from '../../db';\r\n\r\nexport default async function(req, res) {\r\n    let newUser,\r\n        { name, email, content, articleID } = req.body;\r\n    if (!/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(email)) {\r\n        res.json(1)\r\n        res.end();\r\n    }\r\n    let hydratedComment = { article_id: articleID, content, post_date: Date.now() };\r\n    try {\r\n        var client = await pool.connect(),\r\n            { rows } = await client.query('SELECT * FROM users WHERE email = $1', [email]),\r\n            [user] = rows;\r\n        if (user) {\r\n            if (user.name !== name) { res.json(2); res.end() }\r\n            await client.query('UPDATE users SET comments = array_append(comments, $1) WHERE email = $2', [hydratedComment, email]);\r\n        } else {\r\n            newUser = true;\r\n            await client.query('INSERT INTO users (name, email, comments) VALUES ($1, $2, $3)', [name, email, []]);\r\n        }\r\n        await client.query('UPDATE articles SET comments = array_append(comments, $1) WHERE id = $2', [{name, email, ...hydratedComment}, articleID])\r\n        if (newUser) { res.json(3); res.end(); }\r\n        res.json();\r\n        res.end();\r\n    } catch (e) { console.log(e) }\r\n    finally { client.release() }\r\n}"]},"metadata":{},"sourceType":"module"}