{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-unfetch';\nimport { postComment } from '../Functions';\n\nfunction CommentInputs({\n  following,\n  articleID,\n  setMessage,\n  parent,\n  embedded\n}) {\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    style: {\n      position: 'relative',\n      marginBottom: '2.35rem',\n      marginTop: '1rem',\n      maxWidth: '55rem'\n    },\n    onSubmit: e => postComment(e, setMessage, articleID, parent),\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]])\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]])\n  }, __jsx(\"img\", {\n    src: \"https://secure.gravatar.com/avatar/?s=40&d=mm&r=g\",\n    alt: \"user\",\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]]) + \" \" + \"input-large-img\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Join the discussion...\",\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]])\n  })), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]])\n  }, __jsx(\"i\", {\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]]) + \" \" + \"fas fa-user input-icon\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Name*\",\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]]) + \" \" + \"input-small\"\n  })), __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]])\n  }, __jsx(\"i\", {\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]]) + \" \" + \"fas fa-at input-icon\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Email*\",\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]]) + \" \" + \"input-small\"\n  }), __jsx(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]])\n  }, __jsx(\"span\", {\n    onClick: async e => {\n      e.persist();\n      e.preventDefault();\n      let email = sessionStorage.getItem('email') || e.currentTarget.parentElement.parentElement.children[1].value,\n          name = sessionStorage.getItem('name') || e.currentTarget.parentElement.parentElement.parentElement.children[1].children[1].value;\n\n      if (email && name) {\n        let response = await fetch('/api/follow-article', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: {\n            name,\n            email,\n            articleID,\n            following\n          }\n        }),\n            status = response.json(),\n            msg;\n\n        switch (status) {\n          default:\n            console.log(status);\n            msg = 'Error Following Article';\n            break;\n\n          case 0:\n            setMessage('');\n            break;\n\n          case 1:\n            msg = 'Invalid email address';\n            break;\n\n          case 2:\n            msg = 'This email is registered with a different name';\n            break;\n\n          case 3:\n            msg = 'New user created';\n        }\n\n        msg && setMessage(msg);\n\n        if (!status || status === 3) {\n          if (!sessionStorage.getItem('email')) {\n            sessionStorage.setItem('email', email);\n            sessionStorage.setItem('name', name);\n          } // e.target.style.transform = 'scaleY(0)';\n\n\n          alert(`Imagine your email being ${following ? 'unsubscribed from' : 'subscribed to'} this article\\'s comment activity`);\n          e.target.parentElement.parentElement.parentElement.reset();\n        } else {\n          alert('Enter your name and email in the boxes to the left to follow this article');\n        }\n      }\n    },\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]])\n  }, __jsx(\"i\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#eee',\n      width: '2rem',\n      height: '2rem',\n      color: '#999',\n      marginRight: '.85rem',\n      border: '1px solid #ddd',\n      cursor: 'pointer'\n    },\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]]) + \" \" + `fas ${following ? \"fa-bell-slash\" : \"fa-bell\"}`\n  })), __jsx(\"button\", {\n    className: _JSXStyle.dynamic([[\"37451718\", [embedded ? '1rem' : '1.15rem']]]) + \" \" + \"post-comment-button\"\n  }, \"Post Comment\"))), __jsx(_JSXStyle, {\n    id: \"37451718\",\n    dynamic: [embedded ? '1rem' : '1.15rem']\n  }, [\".post-comment-button.__jsx-style-dynamic-selector{background-color:#555;color:white;font-size:.925rem;padding:.5rem 1.25rem;cursor:pointer;border:none;}\", \".post-comment-button.__jsx-style-dynamic-selector:hover,.post-comment-button.__jsx-style-dynamic-selector:focus{background-color:#404040;}\", `input.__jsx-style-dynamic-selector{padding:1.7rem;padding-left:5rem;border:1px solid #ddd;color:#888;font-family:monospace;width:100%;margin-bottom:.6rem;font-size:${embedded ? '1rem' : '1.15rem'};}`, \".input-large-img.__jsx-style-dynamic-selector{position:absolute;top:1rem;left:1rem;box-shadow:0 0 4px 2px #d8d8d8;}\", \".input-small.__jsx-style-dynamic-selector{font-size:.9rem;padding:.5rem 1.9rem;width:50%;font-family:Lato;}\", \".input-icon.__jsx-style-dynamic-selector{color:#aaa;position:absolute;top:.65rem;left:.5rem;}\"])));\n}\n\nexport default CommentInputs;","map":null,"metadata":{},"sourceType":"module"}