{"ast":null,"code":"import pool from '../../db';\nexport default (async (req, res) => {\n  try {\n    var client = await pool.connect();\n    let title = await client.query('SELECT title FROM articles WHERE id = $1', [req.query.articleID]);\n    res.status(200).json(title);\n  } catch (e) {\n    console.log(e);\n    res.status(500).end();\n  } finally {\n    client.release();\n  }\n}); // async function onSubmit(e) {\n//     e.preventDefault();\n//     const [comment, name, email] = [0, 1, 2].map(i => e.target.children[i].children[1].value);\n//     if (!comment || !name || !email) { return 1}\n//     let newUser;\n//     if (!email.test(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/)) {\n//         return 2;\n//     }\n//     try {\n//         var client = await pool.connect(),\n//             registered = await client.query('SELECT * FROM users WHERE email = $1', email);\n//         if (registered) {\n//             if (registered.name !== name) { return 3 }\n//             await client.query('UPDATE users SET comments = array_append(comments, $1) WHERE email = $2', [comment, email]);\n//         } else {\n//             newUser = true;\n//             await client.query('INSERT INTO users (name, email, comments) VALUES ($1, $2, $3)', [name, email, [comment]]);\n//         }\n//         await client.query('UPDATE articles SET comments = array_append(comments, $1) WHERE id = $2', [{name, email, comment}, articleID])\n//         if (newUser) { return 4 }\n//     } catch (e) { console.log(e) }\n//     finally { client.release() }\n// }","map":{"version":3,"sources":["C:/Users/nicho/Code/Portfolio/mock_nexus/pages/api/post-comment.js"],"names":["pool","req","res","client","connect","title","query","articleID","status","json","e","console","log","end","release"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,UAAjB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI;AACA,QAAIC,MAAM,GAAG,MAAMH,IAAI,CAACI,OAAL,EAAnB;AACA,QAAIC,KAAK,GAAG,MAAMF,MAAM,CAACG,KAAP,CAAa,0CAAb,EAAyD,CAACL,GAAG,CAACK,KAAJ,CAAUC,SAAX,CAAzD,CAAlB;AACAL,IAAAA,GAAG,CACEM,MADL,CACY,GADZ,EAEKC,IAFL,CAEUJ,KAFV;AAGH,GAND,CAME,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAR,IAAAA,GAAG,CACEM,MADL,CACY,GADZ,EAEKK,GAFL;AAEY,GAVhB,SAWQ;AAAEV,IAAAA,MAAM,CAACW,OAAP;AAAkB;AAC/B,CAbD,E,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import pool from '../../db';\r\n\r\nexport default async (req, res) => {\r\n    try {\r\n        var client = await pool.connect();\r\n        let title = await client.query('SELECT title FROM articles WHERE id = $1', [req.query.articleID]);\r\n        res\r\n            .status(200)\r\n            .json(title);\r\n    } catch (e) {\r\n        console.log(e);\r\n        res\r\n            .status(500)\r\n            .end() }\r\n    finally { client.release() }\r\n};\r\n\r\n// async function onSubmit(e) {\r\n//     e.preventDefault();\r\n//     const [comment, name, email] = [0, 1, 2].map(i => e.target.children[i].children[1].value);\r\n//     if (!comment || !name || !email) { return 1}\r\n//     let newUser;\r\n//     if (!email.test(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/)) {\r\n//         return 2;\r\n//     }\r\n//     try {\r\n//         var client = await pool.connect(),\r\n//             registered = await client.query('SELECT * FROM users WHERE email = $1', email);\r\n//         if (registered) {\r\n//             if (registered.name !== name) { return 3 }\r\n//             await client.query('UPDATE users SET comments = array_append(comments, $1) WHERE email = $2', [comment, email]);\r\n//         } else {\r\n//             newUser = true;\r\n//             await client.query('INSERT INTO users (name, email, comments) VALUES ($1, $2, $3)', [name, email, [comment]]);\r\n//         }\r\n//         await client.query('UPDATE articles SET comments = array_append(comments, $1) WHERE id = $2', [{name, email, comment}, articleID])\r\n//         if (newUser) { return 4 }\r\n//     } catch (e) { console.log(e) }\r\n//     finally { client.release() }\r\n// }"]},"metadata":{},"sourceType":"module"}