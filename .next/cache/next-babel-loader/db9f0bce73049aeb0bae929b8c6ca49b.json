{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nimport { Simulate } from 'react-dom/test-utils';\n\nfunction CommentInputs(_ref) {\n  var following = _ref.following,\n      articleID = _ref.articleID,\n      setMessage = _ref.setMessage,\n      parent = _ref.parent,\n      embedded = _ref.embedded,\n      firstComment = _ref.firstComment,\n      mainInput = _ref.mainInput;\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  useEffect(function (_) {\n    sessionStorage.getItem('email') && setUser({\n      name: sessionStorage.getItem('name'),\n      email: sessionStorage.getItem('email')\n    });\n    console.log(user);\n  }, []);\n\n  function postComment(_x, _x2, _x3) {\n    return _postComment.apply(this, arguments);\n  }\n\n  function _postComment() {\n    _postComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e, setMessage, article_id) {\n      var parent,\n          _map,\n          _map2,\n          content,\n          name,\n          email,\n          response,\n          status,\n          msg,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              parent = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : null;\n              e.persist();\n              e.preventDefault();\n              _map = [0, 1, 2].map(function (i) {\n                return e.target.children[i].children[1].value;\n              }), _map2 = _slicedToArray(_map, 3), content = _map2[0], name = _map2[1], email = _map2[2];\n\n              if (!(!content || !name || !email)) {\n                _context2.next = 6;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", setMessage('There is an empty field'));\n\n            case 6:\n              _context2.next = 8;\n              return fetch('http://localhost:3000/api/post-comment', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  article_id: article_id,\n                  name: name,\n                  email: email,\n                  content: content,\n                  parent: parent,\n                  post_date: Date.now()\n                })\n              });\n\n            case 8:\n              response = _context2.sent;\n              _context2.next = 11;\n              return response.json();\n\n            case 11:\n              status = _context2.sent;\n              _context2.t0 = status;\n              _context2.next = _context2.t0 === 0 ? 15 : _context2.t0 === 1 ? 17 : _context2.t0 === 2 ? 19 : _context2.t0 === 3 ? 21 : 23;\n              break;\n\n            case 15:\n              setMessage('');\n              return _context2.abrupt(\"break\", 24);\n\n            case 17:\n              msg = 'Invalid email address';\n              return _context2.abrupt(\"break\", 24);\n\n            case 19:\n              msg = 'This email is registered with a different name';\n              return _context2.abrupt(\"break\", 24);\n\n            case 21:\n              msg = 'New user created';\n              return _context2.abrupt(\"break\", 24);\n\n            case 23:\n              console.log(status);\n\n            case 24:\n              msg && setMessage(msg);\n\n              if (!status || status === 3) {\n                sessionStorage.setItem('email', email);\n                sessionStorage.setItem('name', name);\n              }\n\n              e.target.reset();\n              document.location.reload();\n\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _postComment.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    style: {\n      position: 'relative',\n      marginBottom: '2.35rem',\n      marginTop: '1rem',\n      maxWidth: '55rem'\n    },\n    onSubmit: function onSubmit(e) {\n      return postComment(e, setMessage, articleID, parent);\n    },\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]])\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]])\n  }, __jsx(\"img\", {\n    src: \"https://secure.gravatar.com/avatar/?s=40&d=mm&r=g\",\n    alt: \"user\",\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]]) + \" \" + \"input-large-img\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\".concat(firstComment ? 'Start' : 'Join', \" the discussion...\"),\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]])\n  })), __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      display: user ? 'none' : 'block'\n    },\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]])\n  }, __jsx(\"i\", {\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]]) + \" \" + \"fas fa-user input-icon\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Name*\",\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]]) + \" \" + \"input-small\"\n  })), __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]])\n  }, __jsx(\"i\", {\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]]) + \" \" + \"fas fa-at input-icon\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Email*\",\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]]) + \" \" + \"input-small\"\n  }), __jsx(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]])\n  }, mainInput && __jsx(\"span\", {\n    tabIndex: 0,\n    onFocus: function onFocus(e) {\n      e.target.style.border = '1px solid black';\n    },\n    onBlur: function onBlur(e) {\n      e.target.style.border = 'none';\n    },\n    onKeyDown: function onKeyDown(e) {\n      return e.keyCode === 13 && Simulate.click(e.target);\n    },\n    onClick: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var form, email, name, response, status, msg;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.persist();\n                e.preventDefault();\n                form = e.currentTarget.parentElement.parentElement.parentElement;\n                email = user ? user.email : e.currentTarget.parentElement.parentElement.children[1].value, name = user ? user.name : e.currentTarget.parentElement.parentElement.parentElement.children[1].children[1].value;\n\n                if (!(email && name)) {\n                  _context.next = 29;\n                  break;\n                }\n\n                _context.next = 7;\n                return fetch('http://localhost:3000/api/follow-article', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    name: name,\n                    email: email,\n                    articleID: articleID,\n                    following: following\n                  })\n                });\n\n              case 7:\n                response = _context.sent;\n                _context.next = 10;\n                return response.json();\n\n              case 10:\n                status = _context.sent;\n                console.log(status);\n                _context.t0 = status;\n                _context.next = _context.t0 === 0 ? 18 : _context.t0 === 1 ? 20 : _context.t0 === 2 ? 22 : _context.t0 === 3 ? 24 : 15;\n                break;\n\n              case 15:\n                console.log(status);\n                msg = 'Error Following Article';\n                return _context.abrupt(\"break\", 25);\n\n              case 18:\n                setMessage('');\n                return _context.abrupt(\"break\", 25);\n\n              case 20:\n                msg = 'Invalid email address';\n                return _context.abrupt(\"break\", 25);\n\n              case 22:\n                msg = 'This email is registered with a different name';\n                return _context.abrupt(\"break\", 25);\n\n              case 24:\n                msg = 'New user created';\n\n              case 25:\n                msg && setMessage(msg);\n\n                if (!status || status === 3) {\n                  if (!sessionStorage.getItem('email')) {\n                    sessionStorage.setItem('email', email);\n                    sessionStorage.setItem('name', name);\n                  }\n\n                  alert(\"Imagine your email being \".concat(following ? 'unsubscribed from' : 'subscribed to', \" this article's comment activity\"));\n                  form.reset();\n                  document.location.reload();\n                }\n\n                _context.next = 30;\n                break;\n\n              case 29:\n                alert('Enter your name and email in the boxes to the left to follow this article');\n\n              case 30:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]])\n  }, __jsx(\"i\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#eee',\n      width: '2rem',\n      height: '2rem',\n      color: '#999',\n      marginRight: '.85rem',\n      border: '1px solid #ddd',\n      cursor: 'pointer'\n    },\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]]) + \" \" + \"fas \".concat(following ? \"fa-bell-slash\" : \"fa-bell\")\n  })), __jsx(\"button\", {\n    className: _JSXStyle.dynamic([[\"2975795631\", [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']]]) + \" \" + \"post-comment-button\"\n  }, \"Post Comment\"))), __jsx(_JSXStyle, {\n    id: \"2975795631\",\n    dynamic: [embedded ? '1rem' : '1.15rem', user ? 'visibility: hidden;' : '']\n  }, [\".post-comment-button.__jsx-style-dynamic-selector{background-color:#555;color:white;font-size:.925rem;padding:.5rem 1.25rem;cursor:pointer;border:none;}\", \".post-comment-button.__jsx-style-dynamic-selector:hover,.post-comment-button.__jsx-style-dynamic-selector:focus{background-color:#404040;}\", \"input.__jsx-style-dynamic-selector{padding:1.7rem;padding-left:5rem;border:1px solid #ddd;color:#888;font-family:monospace;width:100%;margin-bottom:.6rem;font-size:\".concat(embedded ? '1rem' : '1.15rem', \";}\"), \".input-large-img.__jsx-style-dynamic-selector{position:absolute;top:1rem;left:1rem;box-shadow:0 0 4px 2px #d8d8d8;}\", \".input-small.__jsx-style-dynamic-selector{font-size:.9rem;padding:.5rem 1.9rem;width:50%;font-family:Lato;}\", \".input-small.__jsx-style-dynamic-selector:nth-child(2),.input-icon.__jsx-style-dynamic-selector{\".concat(user ? 'visibility: hidden;' : '', \";}\"), \".input-icon.__jsx-style-dynamic-selector{color:#aaa;position:absolute;top:.65rem;left:.5rem;}\"])));\n}\n\nexport default CommentInputs;","map":null,"metadata":{},"sourceType":"module"}