{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nicho\\\\code\\\\portfolio\\\\mock_nexus\\\\pages\\\\categories\\\\[category].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ArticleDisplay from '../../components/ArticleDisplay';\nimport Layout from '../../layouts';\nexport var __N_SSG = true;\nexport default (function (_ref) {\n  var heading = _ref.heading,\n      articles = _ref.articles,\n      categories = _ref.categories;\n  return __jsx(Layout, {\n    categories: categories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 55\n    }\n  }, \" \", __jsx(ArticleDisplay, {\n    type: \"category\",\n    heading: heading,\n    articles: articles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 88\n    }\n  }), \" \");\n});","map":{"version":3,"sources":["C:/Users/nicho/code/portfolio/mock_nexus/pages/categories/[category].js"],"names":["ArticleDisplay","Layout","heading","articles","categories"],"mappings":";;;;;AACA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAuBA,gBAAe;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,QAAZ,QAAYA,QAAZ;AAAA,MAAsBC,UAAtB,QAAsBA,UAAtB;AAAA,SAAuC,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiC,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,UAArB;AAAgC,IAAA,OAAO,EAAEF,OAAzC;AAAkD,IAAA,QAAQ,EAAEC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,MAAvC;AAAA,CAAf","sourcesContent":["import { queryDB, getCategories } from '../../Functions';\r\nimport ArticleDisplay from '../../components/ArticleDisplay';\r\nimport Layout from '../../layouts';\r\n\r\nexport async function getStaticPaths() {\r\n    let titles = await queryDB(\"SELECT title FROM categories WHERE title <> 'Labyrinth'\");\r\n    let paths = titles.map(title => ({ params: { category: title.title.toLowerCase().replace(/ /g, '-') } }));\r\n\r\n    return { paths, fallback: false }\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n    let title = params.category.split('-').map((word, i) => (i === 0 || !['the', 'on'].includes(word)) ? word[0].toUpperCase() + word.slice(1) : word).join(' '),\r\n        articleIDs = await queryDB('SELECT articles FROM categories WHERE title = $1', [title]),\r\n        articles = await queryDB('SELECT * FROM articles WHERE id = ANY($1)', [articleIDs[0].articles]);\r\n\r\n    return {\r\n        props: JSON.parse(JSON.stringify({\r\n            heading: title,\r\n            articles,\r\n            categories: await getCategories()\r\n        }))\r\n    }\r\n}\r\n\r\nexport default ({ heading, articles, categories }) => <Layout categories={categories}> <ArticleDisplay type=\"category\" heading={heading} articles={articles} /> </Layout>"]},"metadata":{},"sourceType":"module"}