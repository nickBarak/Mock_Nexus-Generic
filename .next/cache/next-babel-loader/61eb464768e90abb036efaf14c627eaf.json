{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicho\\\\code\\\\portfolio\\\\mock_nexus\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport '../styles/style.css';\nimport Layout from '../layouts';\nimport { queryDB } from '../Functions'; // export async function getStaticProps() {\n//     let categories = await queryDB(\"SELECT * FROM categories WHERE title <> 'Headlines' AND title <> 'Labyrinth'\");\n//     for (let category of categories) {\n//         for (let id of category.articles) {\n//             let hydratedArticle = await queryDB(\"SELECT * FROM articles WHERE id = $1\", [id]);\n//             category.articles.splice(category.articles.indexOf(id), 1, hydratedArticle[0]);\n//         }\n//     }\n//     return { props: { pageProps: { ...pageProps, categories } } };\n// }\n\nexport default (({\n  Component,\n  pageProps\n}) => __jsx(Component, _extends({}, pageProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 46\n  }\n})));","map":{"version":3,"sources":["C:/Users/nicho/code/portfolio/mock_nexus/pages/_app.js"],"names":["Layout","queryDB","Component","pageProps"],"mappings":";;;;;;AAAA,OAAO,qBAAP;AACA,OAAOA,MAAP,MAAmB,YAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,gBAAe,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C","sourcesContent":["import '../styles/style.css';\r\nimport Layout from '../layouts';\r\nimport { queryDB } from '../Functions';\r\n\r\n// export async function getStaticProps() {\r\n//     let categories = await queryDB(\"SELECT * FROM categories WHERE title <> 'Headlines' AND title <> 'Labyrinth'\");\r\n\r\n//     for (let category of categories) {\r\n//         for (let id of category.articles) {\r\n//             let hydratedArticle = await queryDB(\"SELECT * FROM articles WHERE id = $1\", [id]);\r\n//             category.articles.splice(category.articles.indexOf(id), 1, hydratedArticle[0]);\r\n//         }\r\n//     }\r\n\r\n//     return { props: { pageProps: { ...pageProps, categories } } };\r\n// }\r\n\r\nexport default ({ Component, pageProps }) => <Component {...pageProps} />"]},"metadata":{},"sourceType":"module"}