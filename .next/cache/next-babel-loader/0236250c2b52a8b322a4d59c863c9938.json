{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport pool from '../../db';\nexport default async function (req, res) {\n  let newUser,\n      {\n    name,\n    email,\n    content,\n    articleID\n  } = req.query;\n\n  if (!email.test(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/)) {\n    res.json(1);\n  }\n\n  let hydratedComment = {\n    article_id,\n    content,\n    post_date: new Date().now()\n  };\n\n  try {\n    var client = await pool.connect(),\n        registered = await client.query('SELECT * FROM users WHERE email = $1', email);\n\n    if (registered) {\n      if (registered.name !== name) {\n        return 2;\n      }\n\n      await client.query('UPDATE users SET comments = array_append(comments, $1) WHERE email = $2', [hydratedComment, email]);\n    } else {\n      newUser = true;\n      await client.query('INSERT INTO users (name, email, comments) VALUES ($1, $2, $3)', [name, email, []]);\n    }\n\n    await client.query('UPDATE articles SET comments = array_append(comments, $1) WHERE id = $2', [_objectSpread({\n      name,\n      email\n    }, hydratedComment), articleID]);\n\n    if (newUser) {\n      return 3;\n    }\n  } catch (e) {\n    console.log(e);\n  } finally {\n    client.release();\n  }\n}","map":{"version":3,"sources":["C:/Users/nicho/Code/Portfolio/mock_nexus/pages/api/post-comment.js"],"names":["pool","req","res","newUser","name","email","content","articleID","query","test","json","hydratedComment","article_id","post_date","Date","now","client","connect","registered","e","console","log","release"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,UAAjB;AAEA,eAAe,gBAAeC,GAAf,EAAoBC,GAApB,EAAyB;AACpC,MAAIC,OAAJ;AAAA,MACI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAsCN,GAAG,CAACO,KAD9C;;AAEA,MAAI,CAACH,KAAK,CAACI,IAAN,CAAW,gcAAX,CAAL,EAAmd;AAC/cP,IAAAA,GAAG,CAACQ,IAAJ,CAAS,CAAT;AACH;;AACD,MAAIC,eAAe,GAAG;AAAEC,IAAAA,UAAF;AAAcN,IAAAA,OAAd;AAAuBO,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,GAAX;AAAlC,GAAtB;;AACA,MAAI;AACA,QAAIC,MAAM,GAAG,MAAMhB,IAAI,CAACiB,OAAL,EAAnB;AAAA,QACIC,UAAU,GAAG,MAAMF,MAAM,CAACR,KAAP,CAAa,sCAAb,EAAqDH,KAArD,CADvB;;AAEA,QAAIa,UAAJ,EAAgB;AACZ,UAAIA,UAAU,CAACd,IAAX,KAAoBA,IAAxB,EAA8B;AAAE,eAAO,CAAP;AAAU;;AAC1C,YAAMY,MAAM,CAACR,KAAP,CAAa,yEAAb,EAAwF,CAACG,eAAD,EAAkBN,KAAlB,CAAxF,CAAN;AACH,KAHD,MAGO;AACHF,MAAAA,OAAO,GAAG,IAAV;AACA,YAAMa,MAAM,CAACR,KAAP,CAAa,+DAAb,EAA8E,CAACJ,IAAD,EAAOC,KAAP,EAAc,EAAd,CAA9E,CAAN;AACH;;AACD,UAAMW,MAAM,CAACR,KAAP,CAAa,yEAAb,EAAwF;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,OAAkBM,eAAlB,GAAoCJ,SAApC,CAAxF,CAAN;;AACA,QAAIJ,OAAJ,EAAa;AAAE,aAAO,CAAP;AAAU;AAC5B,GAZD,CAYE,OAAOgB,CAAP,EAAU;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAgB,GAZ9B,SAaQ;AAAEH,IAAAA,MAAM,CAACM,OAAP;AAAkB;AAC/B","sourcesContent":["import pool from '../../db';\r\n\r\nexport default async function(req, res) {\r\n    let newUser,\r\n        { name, email, content, articleID } = req.query;\r\n    if (!email.test(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/)) {\r\n        res.json(1);\r\n    }\r\n    let hydratedComment = { article_id, content, post_date: new Date().now() };\r\n    try {\r\n        var client = await pool.connect(),\r\n            registered = await client.query('SELECT * FROM users WHERE email = $1', email);\r\n        if (registered) {\r\n            if (registered.name !== name) { return 2 }\r\n            await client.query('UPDATE users SET comments = array_append(comments, $1) WHERE email = $2', [hydratedComment, email]);\r\n        } else {\r\n            newUser = true;\r\n            await client.query('INSERT INTO users (name, email, comments) VALUES ($1, $2, $3)', [name, email, []]);\r\n        }\r\n        await client.query('UPDATE articles SET comments = array_append(comments, $1) WHERE id = $2', [{name, email, ...hydratedComment}, articleID])\r\n        if (newUser) { return 3 }\r\n    } catch (e) { console.log(e) }\r\n    finally { client.release() }\r\n}"]},"metadata":{},"sourceType":"module"}